{"version":3,"sources":["logo.svg","components/header.js","components/navigation.js","components/slider.js","components/Dropdown.js","components/Color.js","components/Filter.js","components/Repository.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","show","setShow","id","onClick","Array","fill","map","i","className","Math","random","Logo","to","src","logo","alt","Header","disableInlineStyles","Navigation","style","opacity","zIndex","link","href","e","document","getElementById","window","location","hash","scrollIntoView","behavior","toUpperCase","substring","styles","root","margin","Nav","slide","color","icon","faChevronLeft","faChevronRight","Slider","children","width","innerWidth","useState","translateX","setTranslateX","setInnerWidth","ref","useRef","handlers","useSwipeable","onSwiped","eventData","console","log","dir","toLowerCase","trackTouch","trackMouse","useEffect","setTimeout","items","current","offsetParent","item","clientWidth","direction","abs","child","transform","Dropdown","setColor","button","border","padding","fontWeight","class","maxHeight","backgroundColor","target","innerText","Color","CloseButton","setFilter","filter","fontSize","position","right","top","ListItem","name","SeeMoreDetails","Object","keys","key","split","join","replace","a","Filter","data","filteredList","d","includes","maxWidth","type","onChange","value","placeholder","length","Commits","commits","commit","html_url","message","author","avatar_url","height","timeDifference","Date","now","date","getTime","tree","sha","RepositoryHeader","repository","commitCount","createdAt","created_at","updatedAt","updated_at","full_name","toDateString","flexDirection","marginTop","previous","msPerMinute","msPerHour","msPerDay","msPerMonth","msPerYear","elapsed","round","Repository","setCommits","getCommits","axios","get","response","borderColor","textAlign","fontFamily","section","display","justifyContent","header","textTransform","letterSpacing","lineHeight","subheader","description","component","Intro","SliderSection","qoute","DropdownSection","FilterSection","people","setPeople","getPeople","results","rel","AboutSection","setRepository","getRepository","Qoute","paddingTop","Home","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0711d486.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.93f6a9f0.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../logo.svg\";\nimport Headroom from \"react-headroom\";\n\nconst Header = ({ show, setShow }) => (\n  /**\n   * We disable InlineStyles to ensure the pinned header syncs up with the unpinned version.\n   */\n  <Headroom disableInlineStyles={true}>\n    <header id=\"header\" className=\"container\">\n      <Logo />\n      <Menu show={show} setShow={setShow} />\n    </header>\n  </Headroom>\n);\n\nconst Menu = ({ show, setShow }) => {\n  return (\n    <button id=\"menuButton\" onClick={() => setShow(!show)}>\n      {Array(2)\n        .fill(\"\")\n        .map((i) => (\n          <span\n            key={Math.random(1000)}\n            className={`bar ${show ? \"show\" : \"\"}`}\n          ></span>\n        ))}\n    </button>\n  );\n};\n\nconst Logo = () => (\n  <Link id=\"logo\" to=\"/\">\n    <img src={logo} alt=\"Floodlight Design\" />\n  </Link>\n);\n\nexport default Header;\n","import React from \"react\";\n\nconst Navigation = ({ show, setShow }) => {\n  const style = show\n    ? {\n        opacity: \"100%\",\n        zIndex: 1,\n      }\n    : {\n        opacity: \"0%\",\n        zIndex: -1,\n      };\n\n  const links = [\"slider-section\", \"dropdown-section\", \"list-section\"];\n\n  return (\n    <nav id=\"navigation\" style={style}>\n      <ul>\n        {links.map((link) => (\n          <li>\n            <button\n              className=\"button\"\n              href={`#${link}`}\n              onClick={() => {\n                setShow(false);\n                const e = document.getElementById(link);\n\n                if (e) {\n                  window.location.hash = link;\n                  e.scrollIntoView({ behavior: \"smooth\" });\n                }\n              }}\n            >\n              {link[0].toUpperCase() + link.substring(1)}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst styles = {\n  root: {\n    margin: \"0 auto\",\n  },\n};\n\nconst Slider = ({ children, color }) => {\n  // If window is bigger than container (900) then set to 900 else window width\n  const width = window.innerWidth > 900 ? 900 : window.innerWidth;\n\n  const [translateX, setTranslateX] = useState(0);\n  const [innerWidth, setInnerWidth] = useState(0);\n\n  const ref = useRef(null);\n\n  const handlers = useSwipeable({\n    onSwiped: (eventData) => {\n      console.log(eventData);\n      // swipes are inverted so we reverse them again - left === right\n      slide(eventData.dir.toLowerCase() === \"left\" ? \"right\" : \"left\");\n    },\n    trackTouch: true,\n    trackMouse: true,\n  });\n\n  /**\n   * Get the combined width of all the items in the slider\n   */\n  useEffect(() => {\n    /**\n     * We set a timeout to ensure the DOM loads by the time the effect runs\n     */\n    setTimeout(() => {\n      let width = 0;\n\n      if (ref) {\n        const items = ref.current.offsetParent.children;\n        for (let item of items) {\n          if (item.className === \"item\") {\n            width += item.clientWidth;\n          }\n        }\n      }\n\n      setInnerWidth(width);\n    }, 500);\n  }, [setInnerWidth]);\n\n  /**\n   * Move the slider or weve hit our limit\n   * @param {string} direction\n   */\n  const slide = (direction) => {\n    // if the current x position + next move > the total width, set to 0\n    if (Math.abs(translateX - width) > innerWidth) {\n      setTranslateX(0);\n    } else {\n      // if we're going left and x + move is greater than 0, put to end else move back\n      direction === \"left\"\n        ? setTranslateX(\n            translateX + width > 0 ? -(innerWidth - width) : translateX + width\n          )\n        : setTranslateX(translateX - width);\n    }\n  };\n\n  return (\n    <div className=\"slider\" style={styles.root} {...handlers}>\n      <Nav slide={slide} color={color} />\n      {children.map((child, i) => {\n        return (\n          <div\n            key={Math.random(1000)}\n            ref={ref}\n            className=\"item\"\n            style={{ transform: `translateX(${translateX}px)` }}\n          >\n            {child}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst Nav = ({ slide, color }) => {\n  return (\n    <div className=\"nav\">\n      <button onClick={() => slide(\"left\")} style={{ color: color }}>\n        <FontAwesomeIcon icon={faChevronLeft} />\n      </button>\n      <button onClick={() => slide(\"right\")} style={{ color: color }}>\n        <FontAwesomeIcon icon={faChevronRight} />\n      </button>\n    </div>\n  );\n};\n\nexport default Slider;\n","import React, { useState } from \"react\";\n\nconst Dropdown = ({ children, color, setColor }) => {\n  const [show, setShow] = useState(false);\n\n  const styles = {\n    button: {\n      border: \"1px solid #fff\",\n      padding: \".5rem 1rem\",\n      color: color === \"black\" ? \"white\" : color,\n      fontWeight: 900,\n    },\n  };\n\n  return (\n    <div className=\"dropdown\">\n      <button\n        className=\"button\"\n        onClick={() => setShow(!show)}\n        style={styles.button}\n      >\n        Click to {show ? \"close\" : \"open\"}!\n      </button>\n      <div class=\"inner\">\n        <ul\n          class={`${show ? \"show\" : \"\"} ${color}`}\n          style={{ maxHeight: show ? \"500px\" : 0, backgroundColor: color }}\n        >\n          {children.map((child) => (\n            <li\n              key={child}\n              onClick={({ target }) => setColor(target.innerText.toLowerCase())}\n            >\n              {child}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import React from \"react\";\n\nconst Color = ({ children, color }) => (\n  <span\n    style={{\n      color: color,\n      fontWeight: \"900\",\n    }}\n  >\n    {children}\n  </span>\n);\n\nexport default Color;\n","import React, { useState } from \"react\";\n\nconst Filter = ({ data, color }) => {\n  const [filter, setFilter] = useState(\"\");\n\n  const filteredList =\n    filter === \"\" ? data : data.filter((d) => d.name.includes(filter));\n\n  return (\n    <div className=\"filter\" style={{ maxWidth: 400 }}>\n      <input\n        type=\"text\"\n        onChange={(e) => setFilter(e.target.value)}\n        placeholder={\"Who is your favorite starwars character?\"}\n        value={filter}\n      />\n      <CloseButton setFilter={setFilter} filter={filter} />\n      <ul>\n        {filteredList.length > 0 ? (\n          filteredList.map((item, i) => (\n            <ListItem\n              key={i}\n              item={item}\n              color={color}\n              setFilter={setFilter}\n              show={filteredList.length === 1}\n            />\n          ))\n        ) : (\n          <li className=\"item no-results\">No results</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nconst CloseButton = ({ setFilter, filter }) => (\n  <button\n    className=\"button\"\n    onClick={() => setFilter(\"\")}\n    style={{\n      fontSize: \"2rem\",\n      position: \"absolute\",\n      right: 5,\n      top: 13,\n      opacity: filter === \"\" ? 0.1 : 1,\n    }}\n  >\n    &times;\n  </button>\n);\n\nconst ListItem = ({ item, color, setFilter, show }) => {\n  return (\n    <li\n      className=\"item\"\n      style={{ backgroundColor: color }}\n      onClick={({ target }) => {\n        if (show === false) setFilter(target.innerText);\n      }}\n    >\n      {show === false ? item.name : <SeeMoreDetails item={item} />}\n    </li>\n  );\n};\n\nconst SeeMoreDetails = ({ item }) => {\n  return (\n    <div class=\"details\">\n      <table>\n        <tbody>\n          {Object.keys(item).map((key) => (\n            <tr>\n              <th>\n                {typeof item[key] === \"string\"\n                  ? key\n                      .split(\"_\")\n                      .join(\" \")\n                      .replace(/(?:^|\\s)\\S/g, function (a) {\n                        return a.toUpperCase();\n                      }) + \":\"\n                  : null}\n              </th>\n              <td>{typeof item[key] === \"string\" ? item[key] : null}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Repository = ({ color, repository }) => {\n  const [commits, setCommits] = useState([]);\n\n  const getCommits = async () => {\n    const baseURL = `https://api.github.com/repos/gerrgg/floodlight-design-react/commits`;\n\n    const response = await axios.get(baseURL);\n\n    if (response.data) {\n      setCommits(response.data);\n    }\n  };\n\n  console.log(commits);\n\n  useEffect(() => {\n    getCommits();\n  }, []);\n\n  return (\n    <div className=\"repository\">\n      <header>\n        <h5>\n          <b>API:</b>\n\n          <a\n            href=\"https://api.github.com/repos/gerrgg/floodlight-design-react\"\n            style={{ color: color, borderColor: color }}\n          >\n            https://api.github.com/repos/gerrgg/floodlight-design-react\n          </a>\n        </h5>\n      </header>\n      <div class=\"inner\">\n        {repository ? (\n          <RepositoryHeader\n            repository={repository}\n            color={color}\n            commitCount={commits.length}\n          />\n        ) : (\n          \"Loading\"\n        )}\n      </div>\n      <Commits commits={commits} />\n    </div>\n  );\n};\n\nconst Commits = ({ commits }) => {\n  return (\n    <ul className=\"commits\">\n      <h2 className=\"header\">Commits</h2>\n      {commits.map((commit) => (\n        <li>\n          <div>\n            <a href={commit.html_url} className=\"message\">\n              {commit.commit.message}\n            </a>\n            <a href={commit.author.html_url} className=\"author\">\n              <img\n                src={commit.author.avatar_url}\n                alt=\"commit author avatar\"\n                style={{ height: 32, width: 32 }}\n              />\n              <b>{commit.commit.author.name}</b>\n              <time>\n                {timeDifference(\n                  Date.now(),\n                  new Date(commit.commit.author.date).getTime()\n                )}\n              </time>\n            </a>\n          </div>\n          <div>\n            <a href={commit.html_url} className=\"button\">\n              {commit.commit.tree.sha.substring(0, 7)}\n            </a>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst RepositoryHeader = ({ repository, color, commitCount }) => {\n  const createdAt = new Date(repository.created_at);\n  const updatedAt = new Date(repository.updated_at);\n  return (\n    <div className=\"details\">\n      <p>\n        <label>Project: </label>\n        {repository.full_name}\n      </p>\n      <p>\n        <label>Created</label> {createdAt.toDateString()}\n      </p>\n      <p>\n        <label>Last Push:</label>{\" \"}\n        {timeDifference(Date.now(), updatedAt.getTime())}\n      </p>\n      <p>\n        <label>Commits:</label>{\" \"}\n        <a href=\"https://github.com/gerrgg/floodlight-design-react/commits/main\">\n          {commitCount}\n        </a>\n      </p>\n      <p style={{ flexDirection: \"row-reverse\", marginTop: \"2rem\" }}>\n        <a class=\"source\" href={repository.html_url} style={{ color }}>\n          Source Code\n        </a>\n      </p>\n    </div>\n  );\n};\n\n//https://stackoverflow.com/a/6109105/3247137\nfunction timeDifference(current, previous) {\n  var msPerMinute = 60 * 1000;\n  var msPerHour = msPerMinute * 60;\n  var msPerDay = msPerHour * 24;\n  var msPerMonth = msPerDay * 30;\n  var msPerYear = msPerDay * 365;\n\n  var elapsed = current - previous;\n\n  if (elapsed < msPerMinute) {\n    return Math.round(elapsed / 1000) + \" seconds ago\";\n  } else if (elapsed < msPerHour) {\n    return Math.round(elapsed / msPerMinute) + \" minutes ago\";\n  } else if (elapsed < msPerDay) {\n    return Math.round(elapsed / msPerHour) + \" hours ago\";\n  } else if (elapsed < msPerMonth) {\n    return \"like \" + Math.round(elapsed / msPerDay) + \" days ago\";\n  } else if (elapsed < msPerYear) {\n    return \"like \" + Math.round(elapsed / msPerMonth) + \" months ago\";\n  } else {\n    return \"like \" + Math.round(elapsed / msPerYear) + \" years ago\";\n  }\n}\n\nexport default Repository;\n","import React, { useEffect, useState } from \"react\";\nimport Slider from \"../components/slider\";\nimport Dropdown from \"../components/Dropdown\";\nimport Color from \"../components/Color\";\nimport Filter from \"../components/Filter\";\nimport Repository from \"../components/Repository\";\n\nimport axios from \"axios\";\n\nconst styles = {\n  root: {\n    textAlign: \"center\",\n    fontFamily: \"Montserrat, sans-serif\",\n  },\n  section: {\n    height: `${250 * 2}px`,\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n  header: {\n    textTransform: \"uppercase\",\n    textAlign: \"center\",\n    letterSpacing: \"10px\",\n    lineHeight: \"50px\",\n  },\n  subheader: {\n    letterSpacing: \"5px\",\n    lineHeight: \"25px\",\n  },\n  description: {\n    margin: \"2rem\",\n  },\n  component: {\n    height: `${350 * 2}px`,\n    marginTop: 250,\n  },\n};\n\nconst Home = () => {\n  return (\n    <div className=\"content home\" style={styles.root}>\n      <div className=\"container\">\n        <Intro />\n        <SliderSection />\n        <DropdownSection />\n        <FilterSection />\n        <AboutSection />\n      </div>\n    </div>\n  );\n};\n\nconst Intro = () => (\n  <div className=\"intro\">\n    <div style={styles.section}>\n      <h2 style={styles.header}>\n        I'M A\n        <br />\n        FRONTEND <br />\n        <Color color=\"#71f971\">ENGINEER</Color> <br />\n      </h2>\n    </div>\n    <div style={styles.section}>\n      <h4 style={styles.subheader}>\n        I BUILD <br /> COMPONENTS WITH\n        <br /> <Color color=\"#0d9ddb\">REACT / SCSS</Color>\n      </h4>\n    </div>\n  </div>\n);\n\nconst SliderSection = () => {\n  const color = \"rgb(238, 65, 195)\";\n\n  return (\n    <div id=\"slider-section\" style={styles.component}>\n      <Color color={color}>Click or swipe</Color>\n\n      <h2 style={styles.header}>Sliders</h2>\n      <Qoute\n        qoute=\"Have no fear of perfection - you'll never reach it.\"\n        author=\"Salvador Dali\"\n        color={color}\n      />\n\n      <Slider color={\"rgb(238, 65, 195)\"}>\n        {Array(10)\n          .fill(\"\")\n          .map((a, i) => (\n            <img\n              key={i}\n              src={`https://place-hold.it/150x100/fff/?text=${i}`}\n              alt=\"placeholder img\"\n            />\n          ))}\n      </Slider>\n    </div>\n  );\n};\n\nconst DropdownSection = () => {\n  const [color, setColor] = useState(\"#ee4141\");\n\n  return (\n    <div id=\"dropdown-section\" style={{ height: 500 }}>\n      <Color color={color}>Pick and Choose</Color>\n      <h2 style={{ ...styles.header }}>Dropdowns</h2>\n      <Qoute\n        qoute=\"I have not failed. I've just found 10,000 ways that won't work.\"\n        author=\"Thomas A. Edison\"\n        color={color}\n      />\n\n      <Dropdown color={color} setColor={setColor}>\n        {[\n          \"Black\",\n          \"Red\",\n          \"Green\",\n          \"Blue\",\n          \"Violet\",\n          \"Pink\",\n          \"Yellow\",\n          \"Orange\",\n        ]}\n      </Dropdown>\n    </div>\n  );\n};\n\nconst FilterSection = () => {\n  const color = \"#ffc0e9\";\n  const [people, setPeople] = useState([]);\n\n  const getPeople = async () => {\n    const baseURL = `https://swapi.dev/api/people/`;\n\n    const response = await axios.get(baseURL);\n\n    if (response.data) {\n      setPeople(response.data.results);\n    }\n  };\n\n  useEffect(() => {\n    getPeople();\n  }, []);\n\n  return (\n    <div id=\"list-section\" style={{ height: 500, marginTop: 250 }}>\n      <Color color={color}>Search and Click</Color>\n      <h2 style={styles.header}>FILTERING LISTS</h2>\n      <Qoute\n        qoute=\"Success is stumbling from failure to failure with no loss of enthusiasm.\"\n        author=\"Winston S. Churchill\"\n        color={color}\n      />\n      <Filter data={people} color=\"#ffc0e9\" />\n      <p>\n        Thank you{\" \"}\n        <Color color={color}>\n          <a href=\"https://swapi.dev/documentation#intro\" rel=\"nofollow\">\n            Star Wars API\n          </a>\n        </Color>\n      </p>\n    </div>\n  );\n};\n\nconst AboutSection = () => {\n  const color = \"#00ff9f\";\n  const [repository, setRepository] = useState(null);\n\n  const getRepository = async () => {\n    const baseURL = `https://api.github.com/repos/gerrgg/floodlight-design-react`;\n\n    const response = await axios.get(baseURL);\n\n    if (response.data) {\n      setRepository(response.data);\n    }\n  };\n\n  useEffect(() => {\n    getRepository();\n  }, []);\n\n  return (\n    <div id=\"list-section\" style={{ height: 500, marginTop: 500 }}>\n      <Color color={color}>About this Project</Color>\n      <h2 style={styles.header}>USING API'S</h2>\n      <Qoute\n        qoute=\"Only those who dare to fail greatly can ever achieve greatly.\"\n        author=\"Robert F. Kennedy\"\n        color={color}\n      />\n      <Repository color={color} repository={repository} />\n    </div>\n  );\n};\n\nconst Qoute = ({ qoute, author, color }) => (\n  <p style={styles.description}>\n    <span className=\"quote\">{qoute}</span>\n    <Color color={color ? color : \"\"}>\n      <br />\n      <b className=\"author\" style={{ opacity: 0.75, paddingTop: \".5rem\" }}>\n        {`-  ${author}`}\n      </b>\n    </Color>\n  </p>\n);\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"normalize-css\";\nimport \"./scss/_main.scss\";\nimport Header from \"./components/header\";\nimport Navigation from \"./components/navigation\";\nimport Home from \"./pages/Home\";\n\nconst App = () => {\n  const [show, setShow] = useState(false);\n\n  return (\n    <Router>\n      <Header show={show} setShow={setShow} />\n      <Navigation show={show} setShow={setShow} />\n\n      <Switch>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}